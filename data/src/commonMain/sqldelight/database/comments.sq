CREATE TABLE comments (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    comment TEXT NOT NULL,
    release_date INTEGER NOT NULL,
    likes_count INTEGER NOT NULL,
    post_id INTEGER NOT NULL REFERENCES posts(id),
    user_id INTEGER NOT NULL REFERENCES users(id),
    user_name TEXT NOT NULL,
    user_lastname TEXT NOT NULL,
    user_avatar TEXT,
    user_release_date INTEGER NOT NULL
);

-- query to get all comments with sorting by release_date
allComments:
  SELECT * FROM comments ORDER BY release_date DESC;

-- query to get all likes posts reactively
 reactiveAllComments:
    SELECT * FROM comments ORDER BY release_date DESC;

-- query to insert a comment
insertComment:
  INSERT OR REPLACE INTO comments (id,comment, release_date, likes_count, post_id,user_id,user_name,user_lastname,user_avatar,user_release_date)
  VALUES (?, ?, ?, ?, ?,?,?,?,?,?);

-- query to update a comment by id
updateComment:
  UPDATE comments SET comment = ?, release_date = ?, likes_count = ?, user_id = ?, post_id = ?
  WHERE id = ?;

-- query to select a comment by ID
selectCommentById:
  SELECT * FROM comments WHERE id = ?;

-- query to delete a comment by ID
deleteCommentById:
  DELETE FROM comments WHERE id = ?;

-- query to update the text of a comment by ID
updateCommentTextById:
  UPDATE comments SET comment = ? WHERE id = ?;

-- query to select all comments for a post
selectAllCommentsForPost:
  SELECT * FROM comments WHERE post_id = ? ORDER BY release_date DESC;

-- query to select the count of comments for a post
selectCommentsCountForPost:
  SELECT COUNT(*) FROM comments WHERE post_id = ? ORDER BY release_date DESC;

-- query to remove all comments
removeAllComments:
  DELETE FROM comments;